// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/concourse/fly/atcclient"
)

type FakeClient struct {
	SendStub        func(request atcclient.Request, response atcclient.Response) error
	sendMutex       sync.RWMutex
	sendArgsForCall []struct {
		request  atcclient.Request
		response atcclient.Response
	}
	sendReturns struct {
		result1 error
	}
}

func (fake *FakeClient) Send(request atcclient.Request, response atcclient.Response) error {
	fake.sendMutex.Lock()
	fake.sendArgsForCall = append(fake.sendArgsForCall, struct {
		request  atcclient.Request
		response atcclient.Response
	}{request, response})
	fake.sendMutex.Unlock()
	if fake.SendStub != nil {
		return fake.SendStub(request, response)
	} else {
		return fake.sendReturns.result1
	}
}

func (fake *FakeClient) SendCallCount() int {
	fake.sendMutex.RLock()
	defer fake.sendMutex.RUnlock()
	return len(fake.sendArgsForCall)
}

func (fake *FakeClient) SendArgsForCall(i int) (atcclient.Request, atcclient.Response) {
	fake.sendMutex.RLock()
	defer fake.sendMutex.RUnlock()
	return fake.sendArgsForCall[i].request, fake.sendArgsForCall[i].response
}

func (fake *FakeClient) SendReturns(result1 error) {
	fake.SendStub = nil
	fake.sendReturns = struct {
		result1 error
	}{result1}
}

var _ atcclient.Client = new(FakeClient)
